/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CheckMarksCMS,
  CheckMarksCMSInterface,
} from "../../StateChange.sol/CheckMarksCMS";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "StateChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "data_",
        type: "string[]",
      },
    ],
    name: "stateChange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102d4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630921eb0814610030575b600080fd5b61004361003e3660046100c4565b610045565b005b60005b818110156100bf577f9824ae01aff64d7fe478bd19512621a0dba437e1cdb833444b37aaa17ba63dd83384848481811061008457610084610139565b90506020028101906100969190610168565b6040516100a5939291906101d4565b60405180910390a1806100b78161023e565b915050610048565b505050565b600080602083850312156100d757600080fd5b823567ffffffffffffffff808211156100ef57600080fd5b818501915085601f83011261010357600080fd5b81358181111561011257600080fd5b8660208260051b850101111561012757600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261019d57600080fd5b83018035915067ffffffffffffffff8211156101b857600080fd5b6020019150368190038213156101cd57600080fd5b9250929050565b73ffffffffffffffffffffffffffffffffffffffff8416815260406020820152816040820152818360608301376000818301606090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610297577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220e4036a1754bce0ab50c719e7ae809f29175f1f4d9a5e8806b02ed8b5433d5bee64736f6c634300080a0033";

type CheckMarksCMSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CheckMarksCMSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CheckMarksCMS__factory extends ContractFactory {
  constructor(...args: CheckMarksCMSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CheckMarksCMS> {
    return super.deploy(overrides || {}) as Promise<CheckMarksCMS>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CheckMarksCMS {
    return super.attach(address) as CheckMarksCMS;
  }
  override connect(signer: Signer): CheckMarksCMS__factory {
    return super.connect(signer) as CheckMarksCMS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheckMarksCMSInterface {
    return new utils.Interface(_abi) as CheckMarksCMSInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CheckMarksCMS {
    return new Contract(address, _abi, signerOrProvider) as CheckMarksCMS;
  }
}
